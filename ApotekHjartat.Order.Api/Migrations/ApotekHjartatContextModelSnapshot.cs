// <auto-generated />
using System;
using ApotekHjartat.Order.Api.Repositories.ApotekHjartat;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApotekHjartat.Order.Api.Migrations
{
    [DbContext(typeof(ApotekHjartatContext))]
    partial class ApotekHjartatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_catalog", "adminpack");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgagent", "pgagent");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("orderId");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdAt");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("UpdatedAt")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updatedAt");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userId");

                    b.HasKey("OrderId")
                        .HasName("Order_pkey");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("orderItemId");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("orderId");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("OrderItemId")
                        .HasName("OrderItem_pkey");

                    b.HasIndex(new[] { "OrderId" }, "IX_OrderItem_orderId");

                    b.HasIndex(new[] { "ProductId" }, "IX_OrderItem_productId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.HasKey("ProductId")
                        .HasName("Product_pkey");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.OrderItem", b =>
                {
                    b.HasOne("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("OrderItem_orderId_fkey");

                    b.HasOne("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("OrderItem_productId_fkey");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ApotekHjartat.Order.Api.Repositories.ApotekHjartat.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
